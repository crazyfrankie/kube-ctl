// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package ioc

import (
	"github.com/crazyfrankie/kube-ctl/api/k8s"
	"github.com/crazyfrankie/kube-ctl/api/mws"
	"github.com/gin-gonic/gin"
	"k8s.io/client-go/kubernetes"
	"k8s.io/client-go/tools/clientcmd"
)

// Injectors from wire.go:

func InitServer() *gin.Engine {
	clientset := InitKubernetes()
	podHandler := k8s.NewPodHandler(clientset)
	v := InitMws()
	engine := InitGin(podHandler, v)
	return engine
}

// wire.go:

func InitKubernetes() *kubernetes.Clientset {
	kubeConfig := ".kube/config"

	config, err := clientcmd.BuildConfigFromFlags("", kubeConfig)
	if err != nil {
		panic(err.Error())
	}

	clientSet, err := kubernetes.NewForConfig(config)
	if err != nil {
		panic(err.Error())
	}

	return clientSet
}

func InitMws() []gin.HandlerFunc {
	return []gin.HandlerFunc{mws.CORS()}
}

func InitGin(pod *k8s.PodHandler, mws2 []gin.HandlerFunc) *gin.Engine {
	srv := gin.Default()
	srv.Use(mws2...)
	pod.RegisterRoute(srv)

	return srv
}
